From 77917ddac4b45bf053154b937b3d83fff378efd8 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Fri, 2 Sep 2022 18:51:58 +0300
Subject: [PATCH] 0003-Add-test-for-vfscore-lib

---
 lib/vfscore/Config.uk         | 15 +++++++++++++
 lib/vfscore/Makefile.uk       |  4 ++++
 lib/vfscore/tests/test_stat.c | 42 +++++++++++++++++++++++++++++++++++
 3 files changed, 61 insertions(+)
 create mode 100644 lib/vfscore/tests/test_stat.c

diff --git a/lib/vfscore/Config.uk b/lib/vfscore/Config.uk
index 1140e79..2b5b5a3 100644
--- a/lib/vfscore/Config.uk
+++ b/lib/vfscore/Config.uk
@@ -7,8 +7,23 @@ config LIBVFSCORE
 	select LIBUKLOCK
 
 if LIBVFSCORE
+
 menu "vfscore: Configuration"
 
+config LIBVFSCORE_TEST
+    bool "Test vfscore"
+    select LIBVFSCORE_TEST_STAT if LIBUKTEST_ALL
+    default n
+
+if LIBVFSCORE_TEST
+
+config LIBVFSCORE_TEST_STAT
+    bool "test: stat()"
+    select LIBRAMFS
+    default n
+
+endif
+
 config LIBVFSCORE_PIPE_SIZE_ORDER
 	int "Pipe size order"
 	default 16
diff --git a/lib/vfscore/Makefile.uk b/lib/vfscore/Makefile.uk
index 30057c5..0296920 100644
--- a/lib/vfscore/Makefile.uk
+++ b/lib/vfscore/Makefile.uk
@@ -22,6 +22,10 @@ LIBVFSCORE_SRCS-y += $(LIBVFSCORE_BASE)/eventpoll.c
 LIBVFSCORE_SRCS-y += $(LIBVFSCORE_BASE)/extra.ld
 LIBVFSCORE_SRCS-$(CONFIG_LIBVFSCORE_AUTOMOUNT_ROOTFS) += \
 	$(LIBVFSCORE_BASE)/rootfs.c
+ifneq ($(filter y,$(CONFIG_LIBVFSCORE_TEST) $(CONFIG_LIBUKTEST_ALL)),)
+	LIBVFSCORE_SRCS-y += $(LIBVFSCORE_BASE)/tests/test_stat.c
+endif
+
 
 
 UK_PROVIDED_SYSCALLS-$(CONFIG_LIBVFSCORE) += write-3 writev-3 pwrite64-4
diff --git a/lib/vfscore/tests/test_stat.c b/lib/vfscore/tests/test_stat.c
new file mode 100644
index 0000000..e0ed815
--- /dev/null
+++ b/lib/vfscore/tests/test_stat.c
@@ -0,0 +1,42 @@
+#include <uk/test.h>
+
+#include <fcntl.h>
+#include <errno.h>
+#include <unistd.h>
+#include <sys/stat.h>
+#include <sys/mount.h>
+
+typedef struct vfscore_stat {
+    int rc;
+    int errcode;
+    char *filename;
+} vfscore_stat_t;
+
+static vfscore_stat_t test_stats [] = {
+    { .rc = 0,    .errcode = 0,        .filename = "/foo/file.txt" },
+    { .rc = -1,    .errcode = EINVAL,    .filename = NULL },
+};
+
+static int fd;
+
+UK_TESTCASE(vfscore_stat_testsuite, vfscore_test_newfile)
+{
+    /* First check if mount works all right */
+    int ret = mount("", "/", "ramfs", 0, NULL);
+    UK_TEST_EXPECT_SNUM_EQ(ret, 0);
+
+    ret = mkdir("/foo", S_IRWXU);
+    UK_TEST_EXPECT_SNUM_EQ(ret, 0);
+
+    fd = open("/foo/file.txt", O_WRONLY | O_CREAT, S_IRWXU);
+    UK_TEST_EXPECT_SNUM_GT(fd, 2);
+
+    UK_TEST_EXPECT_SNUM_EQ(
+        write(fd, "hello\n", sizeof("hello\n")),
+        sizeof("hello\n")
+    );
+    fsync(fd);
+}
+
+/* Register the test suite */
+uk_testsuite_register(vfscore_stat_testsuite, NULL);
\ No newline at end of file
-- 
2.25.1

